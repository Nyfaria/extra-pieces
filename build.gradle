plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id "me.modmuss50.mod-publish-plugin" version "0.3.3"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		url = uri("https://ueaj.dev/maven")
		// for 0.4.2 and older
		// url uri("https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/")
	}
	flatDir {
		dir 'libs'
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.6")))
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Artifice
//	modImplementation "io.github.vampirestudios:AstralArtifice:${project.artifice_version}"
//	include "io.github.vampirestudios:AstralArtifice:${project.artifice_version}"

	// Jankson
	//modImplementation "io.github.cottonmc:Jankson-Fabric:${project.jankson_version}"
	//include "io.github.cottonmc:Jankson-Fabric:${project.jankson_version}"
	
	modImplementation "blue.endless:jankson:${project.jankson_version}"
	include "blue.endless:jankson:${project.jankson_version}"
	modImplementation(include("net.devtech:arrp:0.8.+"))
	modImplementation("net.astralsapphire:AstralExtraBlocks:1.20-TC.5")
	modImplementation "curse.maven:wthit-440979:5481039"
	modImplementation "curse.maven:badpackets-615134:4784394"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishMods {
	if(publishFabric) {
		file = remapJar.archiveFile
		changelog = file("changelog.md").text
		type = STABLE
		modLoaders.add("fabric")
		displayName = "Extra Pieces-${minecraft_version}-[Fabric]-${project.property('version')}"
		if (curseforge_publishing_enabled.toBoolean()) {
			curseforge {
				projectId = curseforge_project_id
				accessToken = curseforge_token
				minecraftVersions.add(minecraft_version)
			}
		}
		if (modrinth_publishing_enabled.toBoolean()) {
			modrinth {
				accessToken = modrinth_token
				projectId = modrinth_project_id
				minecraftVersions.add(minecraft_version)
			}
		}
	}
}
